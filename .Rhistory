labs(x="Wind speed (km/h)", y=ylab) +
theme_bw()
table(kos,ƒçcloud)
table(kos$cloud)
nd <- data.frame(alan = seq(min(kos_sc$alan), max(kos_sc$alan), l=100),
day = median(kos_sc$day),
press_sunset = 0,
wind_sunset = 0,
cloud = "No clouds")
bb <- bootMer(mod2, FUN=function(x) predict(x, nd, re.form=NA), nsim = R)
nd$y <- bb$t0
nd$lwr <- apply(bb$t, 2, quantile, 0.025)
nd$upr <- apply(bb$t, 2, quantile, 0.9757)
ggplot(nd, aes(x=alan*sd(kos$alan)+mean(kos$alan), y=y*sd(kos$end_rel, na.rm=T) + mean(kos$end_rel, na.rm=T))) +
geom_line() +
geom_point(data=kos_sc %>% filter(cloud=="No clouds"), aes(y=end_rel*sd(kos$end_rel, na.rm=T)+mean(kos$end_rel, na.rm=T)), alpha = .2) +
geom_ribbon(aes(ymin=lwr*sd(kos$end_rel, na.rm=T) + mean(kos$end_rel, na.rm=T),
ymax=upr*sd(kos$end_rel, na.rm=T) + mean(kos$end_rel, na.rm=T)), alpha=.3) +
labs(x="Wind speed (km/h)", y=ylab) +
theme_bw()
nd <- expand.grid(alan = seq(min(kos_sc$alan), max(kos_sc$alan), l=100),
day = median(kos_sc$day),
press_sunset = 0,
wind_sunset = 0,
cloud = c("No clouds", "Partly cloudy", "Cloudy"))
bb <- bootMer(mod2, FUN=function(x) predict(x, nd, re.form=NA), nsim = R)
nd$y <- bb$t0
nd$lwr <- apply(bb$t, 2, quantile, 0.025)
nd$upr <- apply(bb$t, 2, quantile, 0.9757)
ggplot(nd, aes(x=alan*sd(kos$alan)+mean(kos$alan), y=y*sd(kos$end_rel, na.rm=T) + mean(kos$end_rel, na.rm=T),
color=cloud, fill=cloud)) +
geom_line() +
geom_point(data=kos_sc, aes(y=end_rel*sd(kos$end_rel, na.rm=T)+mean(kos$end_rel, na.rm=T)), alpha = .2) +
geom_ribbon(aes(ymin=lwr*sd(kos$end_rel, na.rm=T) + mean(kos$end_rel, na.rm=T),
ymax=upr*sd(kos$end_rel, na.rm=T) + mean(kos$end_rel, na.rm=T)), alpha=.3) +
labs(x="Wind speed (km/h)", y=ylab) +
theme_bw()
mod2$coefficients
coef(mode2)
coef(mod2)
coef(mod2)$alan
coef(mod2)$loc$alan[1]
coef(mod2)$loc$alan[1]*sd(kos$end_rel, na.rm=T)/sd(kos$alan)
60*coef(mod2)$loc$alan[1]*sd(kos$end_rel, na.rm=T)/sd(kos$alan)
coef(mod2)$loc$alan[1]*sd(kos$end_rel, na.rm=T)/sd(kos$alan)
(nd$y*sd(kos$end_rel, na.rm=T) + mean(kos$end_rel, na.rm=T))[nd$alan == max(nd$alan)]
(nd$y*sd(kos$end_rel, na.rm=T) + mean(kos$end_rel, na.rm=T))[nd$alan == max(nd$alan)] -
(nd$y*sd(kos$end_rel, na.rm=T) + mean(kos$end_rel, na.rm=T))[nd$alan == min(nd$alan)]
bb$t %>% names
bb$t
apply(bb$t, 2, quantile, 0.025)
nd$se <- apply(bb$t, 2 sd)
nd$se <- apply(bb$t, 2, sd)
diff(c(5,3))
diff(c(3,5))
predict(x, data.frame(alan = c(min(kos_sc$alan), max(kos_sc$alan),
day = median(kos_sc$day),
press_sunset = 0,
wind_sunset = 0,
cloud = "No clouds")),
re.form = NA) %>%
diff
x <- mod2
predict(x, data.frame(alan = c(min(kos_sc$alan), max(kos_sc$alan),
day = median(kos_sc$day),
press_sunset = 0,
wind_sunset = 0,
cloud = "No clouds")),
re.form = NA) %>%
diff
predict(x, data.frame(alan = c(min(kos_sc$alan), max(kos_sc$alan),
day = median(kos_sc$day),
press_sunset = 0,
wind_sunset = 0,
cloud = "No clouds")),
re.form = NA)
predict(x, data.frame(alan = c(min(kos_sc$alan), max(kos_sc$alan)),
day = median(kos_sc$day),
press_sunset = 0,
wind_sunset = 0,
cloud = "No clouds")),
re.form = NA)
predict(x, data.frame(alan = c(min(kos_sc$alan), max(kos_sc$alan)),
day = median(kos_sc$day),
press_sunset = 0,
wind_sunset = 0,
cloud = "No clouds"),
re.form = NA)
predict(x, data.frame(alan = c(min(kos_sc$alan), max(kos_sc$alan)),
day = median(kos_sc$day),
press_sunset = 0,
wind_sunset = 0,
cloud = "No clouds"),
re.form = NA) %>%
diff
diffs <- bootMer(mod2, FUN=function(x) predict(x, data.frame(alan = c(min(kos_sc$alan), max(kos_sc$alan)),
day = median(kos_sc$day),
press_sunset = 0,
wind_sunset = 0,
cloud = "No clouds"),
re.form = NA) %>%
diff, nsim=R)
sd(diffs)
sd(diffs[,1])
sd(diffs$t)
sd(diffs$t)*sd(kos$end_rel, na.rm=T) + mean(kos$end_rel, na.rm=T)
diffs$t0*sd(kos$end_rel, na.rm=T) + mean(kos$end_rel, na.rm=T)
(nd$y[nd$alan == max(nd$alan)] -
nd$y[nd$alan == min(nd$alan)])*sd(kos$end_rel, na.rm=T) + mean(kos$end_rel, na.rm=T)
(nd$y[nd$alan == max(nd$alan)] -
nd$y[nd$alan == min(nd$alan)])*sd(kos$end_rel, na.rm=T)
diffs$t0*sd(kos$end_rel, na.rm=T)
sd(diffs$t)*sd(kos$end_rel, na.rm=T)
summary(mod2)
summary(mod2)$table
summary(mod2)$coef
summary(mod2)$coef["alan",]
summary(mod2)$coef["alan",1]
summary(mod2)$coef["alan",1]*(max(kos_sc$alan) - min(kos_sc$alan))
summary(mod2)$coef["alan",1]*(max(kos_sc$alan) - min(kos_sc$alan))*sd(kos$alan)/sd(kos$end_rel)
summary(mod2)$coef["alan",1]*(max(kos_sc$alan) - min(kos_sc$alan))*sd(kos$alan)/sd(kos$end_rel, na.rm=T)
summary(mod2)$coef["alan",1]*(max(kos_sc$alan) - min(kos_sc$alan))*sd(kos$end_rel, na.rm=T)/sd(kos$alan)
summary(mod2)$coef["alan",1]*(max(kos_sc$alan) - min(kos_sc$alan))
summary(mod2)$coef["alan",1]
summary(mod2)$coef["alan",1]*sd(kos$end_rel, na.rm=T)/sd(kos$alan)
(max(kos_sc$alan) - min(kos_sc$alan))*summary(mod2)$coef["alan",1]*sd(kos$end_rel, na.rm=T)/sd(kos$alan)
(max(kos$alan) - min(kos$alan))*summary(mod2)$coef["alan",1]*sd(kos$end_rel, na.rm=T)/sd(kos$alan)
(max(kos_sc$alan) - min(kos_sc$alan))*summary(mod2)$coef["alan",1]*sd(kos$end_rel, na.rm=T)
summary(mod2)$coef["alan",2]
summary(mod2)$coef["alan",2]*sd(kos$end_rel, na.rm=T)
(max(kos_sc$alan) - min(kos_sc$alan))*summary(mod2)$coef["alan",2]*sd(kos$end_rel, na.rm=T)
ggplot(nd %>% filter(cloud="No clouds"),
aes(x=alan*sd(kos$alan)+mean(kos$alan), y=y*sd(kos$end_rel, na.rm=T) + mean(kos$end_rel, na.rm=T))) +
geom_line() +
geom_point(data=kos_sc, aes(y=end_rel*sd(kos$end_rel, na.rm=T)+mean(kos$end_rel, na.rm=T)), alpha = .2) +
geom_ribbon(aes(ymin=lwr*sd(kos$end_rel, na.rm=T) + mean(kos$end_rel, na.rm=T),
ymax=upr*sd(kos$end_rel, na.rm=T) + mean(kos$end_rel, na.rm=T)), alpha=.3) +
labs(x="Wind speed (km/h)", y=ylab) +
theme_bw()
ggplot(nd %>% filter(cloud=="No clouds"),
aes(x=alan*sd(kos$alan)+mean(kos$alan), y=y*sd(kos$end_rel, na.rm=T) + mean(kos$end_rel, na.rm=T))) +
geom_line() +
geom_point(data=kos_sc, aes(y=end_rel*sd(kos$end_rel, na.rm=T)+mean(kos$end_rel, na.rm=T)), alpha = .2) +
geom_ribbon(aes(ymin=lwr*sd(kos$end_rel, na.rm=T) + mean(kos$end_rel, na.rm=T),
ymax=upr*sd(kos$end_rel, na.rm=T) + mean(kos$end_rel, na.rm=T)), alpha=.3) +
labs(x="Wind speed (km/h)", y=ylab) +
theme_bw()
ggplot(nd %>% filter(cloud=="No clouds"),
aes(x=alan*sd(kos$alan)+mean(kos$alan), y=y*sd(kos$end_rel, na.rm=T) + mean(kos$end_rel, na.rm=T))) +
geom_line() +
geom_point(data=kos_sc, aes(y=end_rel*sd(kos$end_rel, na.rm=T)+mean(kos$end_rel, na.rm=T)), alpha = .2) +
geom_ribbon(aes(ymin=lwr*sd(kos$end_rel, na.rm=T) + mean(kos$end_rel, na.rm=T),
ymax=upr*sd(kos$end_rel, na.rm=T) + mean(kos$end_rel, na.rm=T)), alpha=.3) +
labs(x="Light pollution", y=ylab) +
theme_bw()
ggsave("start_2.png", height = 12, width = 12, units = "cm", dpi=300)
nd %>% filter(alan == 0)
ggplot(nd %>% filter(abs(alan) < 0.01),
aes(x=alan*sd(kos$alan)+mean(kos$alan), y=y*sd(kos$end_rel, na.rm=T) + mean(kos$end_rel, na.rm=T))) +
geom_line() +
geom_point(data=kos_sc, aes(y=end_rel*sd(kos$end_rel, na.rm=T)+mean(kos$end_rel, na.rm=T)), alpha = .2) +
geom_ribbon(aes(ymin=lwr*sd(kos$end_rel, na.rm=T) + mean(kos$end_rel, na.rm=T),
ymax=upr*sd(kos$end_rel, na.rm=T) + mean(kos$end_rel, na.rm=T)), alpha=.3) +
labs(x="Light pollution", y=ylab) +
theme_bw()
ggplot(nd %>% filter(abs(alan) < 0.01),
aes(x=cloud, y=y*sd(kos$end_rel, na.rm=T) + mean(kos$end_rel, na.rm=T))) +
geom_point() +
geom_point(data=kos_sc, aes(y=end_rel*sd(kos$end_rel, na.rm=T)+mean(kos$end_rel, na.rm=T)), alpha = .2) +
geom_errorbar(aes(ymin=lwr*sd(kos$end_rel, na.rm=T) + mean(kos$end_rel, na.rm=T),
ymax=upr*sd(kos$end_rel, na.rm=T) + mean(kos$end_rel, na.rm=T)), alpha=.3) +
labs(x="Light pollution", y=ylab) +
theme_bw()
ggplot(nd %>% filter(abs(alan) < 0.01),
aes(x=cloud, y=y*sd(kos$end_rel, na.rm=T) + mean(kos$end_rel, na.rm=T))) +
geom_point() +
geom_jitter(data=kos_sc, aes(y=end_rel*sd(kos$end_rel, na.rm=T)+mean(kos$end_rel, na.rm=T)), alpha = .2) +
geom_errorbar(aes(ymin=lwr*sd(kos$end_rel, na.rm=T) + mean(kos$end_rel, na.rm=T),
ymax=upr*sd(kos$end_rel, na.rm=T) + mean(kos$end_rel, na.rm=T)), alpha=.3) +
labs(x="Light pollution", y=ylab) +
theme_bw()
ggplot(nd %>% filter(abs(alan) < 0.01),
aes(x=cloud, y=y*sd(kos$end_rel, na.rm=T) + mean(kos$end_rel, na.rm=T))) +
geom_point() +
geom_jitter(data=kos_sc, aes(y=end_rel*sd(kos$end_rel, na.rm=T)+mean(kos$end_rel, na.rm=T)), alpha = .2) +
geom_errorbar(aes(ymin=lwr*sd(kos$end_rel, na.rm=T) + mean(kos$end_rel, na.rm=T),
ymax=upr*sd(kos$end_rel, na.rm=T) + mean(kos$end_rel, na.rm=T)), width=,2) +
labs(x="Light pollution", y=ylab) +
theme_bw()
ggplot(nd %>% filter(abs(alan) < 0.01),
aes(x=cloud, y=y*sd(kos$end_rel, na.rm=T) + mean(kos$end_rel, na.rm=T))) +
geom_point() +
geom_jitter(data=kos_sc, aes(y=end_rel*sd(kos$end_rel, na.rm=T)+mean(kos$end_rel, na.rm=T)), alpha = .2) +
geom_errorbar(aes(ymin=lwr*sd(kos$end_rel, na.rm=T) + mean(kos$end_rel, na.rm=T),
ymax=upr*sd(kos$end_rel, na.rm=T) + mean(kos$end_rel, na.rm=T)), width=.2) +
labs(x="Light pollution", y=ylab) +
theme_bw()
ggplot(nd %>% filter(abs(alan) < 0.01),
aes(x=cloud, y=y*sd(kos$end_rel, na.rm=T) + mean(kos$end_rel, na.rm=T))) +
geom_point() +
geom_jitter(data=kos_sc, aes(y=end_rel*sd(kos$end_rel, na.rm=T)+mean(kos$end_rel, na.rm=T)), alpha = .2, width=.2) +
geom_errorbar(aes(ymin=lwr*sd(kos$end_rel, na.rm=T) + mean(kos$end_rel, na.rm=T),
ymax=upr*sd(kos$end_rel, na.rm=T) + mean(kos$end_rel, na.rm=T)), width=.2) +
labs(x="Light pollution", y=ylab) +
theme_bw()
ggplot(nd %>% filter(abs(alan) < 0.01),
aes(x=cloud, y=y*sd(kos$end_rel, na.rm=T) + mean(kos$end_rel, na.rm=T))) +
geom_point() +
geom_jitter(data=kos_sc, aes(y=end_rel*sd(kos$end_rel, na.rm=T)+mean(kos$end_rel, na.rm=T)), alpha = .2, width=.1) +
geom_errorbar(aes(ymin=lwr*sd(kos$end_rel, na.rm=T) + mean(kos$end_rel, na.rm=T),
ymax=upr*sd(kos$end_rel, na.rm=T) + mean(kos$end_rel, na.rm=T)), width=.2) +
labs(x="Light pollution", y=ylab) +
theme_bw()
ggplot(nd %>% filter(abs(alan) < 0.01),
aes(x=cloud, y=y*sd(kos$end_rel, na.rm=T) + mean(kos$end_rel, na.rm=T))) +
geom_point() +
geom_jitter(data=kos_sc, aes(y=end_rel*sd(kos$end_rel, na.rm=T)+mean(kos$end_rel, na.rm=T)), alpha = .2, width=.1) +
geom_errorbar(aes(ymin=lwr*sd(kos$end_rel, na.rm=T) + mean(kos$end_rel, na.rm=T),
ymax=upr*sd(kos$end_rel, na.rm=T) + mean(kos$end_rel, na.rm=T)), width=.2) +
labs(x="Cloudiness", y=ylab) +
theme_bw()
ylab = "Cessation of dusk singing (min. relative to sunset)"
ggplot(nd %>% filter(cloud=="No clouds"),
aes(x=alan*sd(kos$alan)+mean(kos$alan), y=y*sd(kos$end_rel, na.rm=T) + mean(kos$end_rel, na.rm=T))) +
geom_line() +
geom_point(data=kos_sc, aes(y=end_rel*sd(kos$end_rel, na.rm=T)+mean(kos$end_rel, na.rm=T)), alpha = .2) +
geom_ribbon(aes(ymin=lwr*sd(kos$end_rel, na.rm=T) + mean(kos$end_rel, na.rm=T),
ymax=upr*sd(kos$end_rel, na.rm=T) + mean(kos$end_rel, na.rm=T)), alpha=.3) +
labs(x="Light pollution", y=ylab) +
theme_bw()
ggplot(nd %>% filter(abs(alan) < 0.01),
aes(x=cloud, y=y*sd(kos$end_rel, na.rm=T) + mean(kos$end_rel, na.rm=T))) +
geom_point() +
geom_jitter(data=kos_sc, aes(y=end_rel*sd(kos$end_rel, na.rm=T)+mean(kos$end_rel, na.rm=T)), alpha = .2, width=.1) +
geom_errorbar(aes(ymin=lwr*sd(kos$end_rel, na.rm=T) + mean(kos$end_rel, na.rm=T),
ymax=upr*sd(kos$end_rel, na.rm=T) + mean(kos$end_rel, na.rm=T)), width=.2) +
labs(x="Cloudiness", y=ylab) +
theme_bw()
p1 <- ggplot(nd %>% filter(cloud=="No clouds"),
aes(x=alan*sd(kos$alan)+mean(kos$alan), y=y*sd(kos$end_rel, na.rm=T) + mean(kos$end_rel, na.rm=T))) +
geom_line() +
geom_point(data=kos_sc, aes(y=end_rel*sd(kos$end_rel, na.rm=T)+mean(kos$end_rel, na.rm=T)), alpha = .2) +
geom_ribbon(aes(ymin=lwr*sd(kos$end_rel, na.rm=T) + mean(kos$end_rel, na.rm=T),
ymax=upr*sd(kos$end_rel, na.rm=T) + mean(kos$end_rel, na.rm=T)), alpha=.3) +
labs(x="Light pollution", y=ylab) +
theme_bw()
nd <- expand.grid(wind_sunset = seq(min(kos_sc$wind_sunset), max(kos_sc$wind_sunset), l=100),
day = median(kos_sc$day),
press_sunset = 0,
alan = 0,
cloud = "No clouds")
bb <- bootMer(mod2, FUN=function(x) predict(x, nd, re.form=NA), nsim = R)
nd$y <- bb$t0
nd$lwr <- apply(bb$t, 2, quantile, 0.025)
nd$upr <- apply(bb$t, 2, quantile, 0.9757)
p1 <- ggplot(nd %>% filter(cloud=="No clouds"),
aes(x=alan*sd(kos$alan)+mean(kos$alan), y=y*sd(kos$end_rel, na.rm=T) + mean(kos$end_rel, na.rm=T))) +
geom_line() +
geom_point(data=kos_sc, aes(y=end_rel*sd(kos$end_rel, na.rm=T)+mean(kos$end_rel, na.rm=T)), alpha = .2) +
geom_ribbon(aes(ymin=lwr*sd(kos$end_rel, na.rm=T) + mean(kos$end_rel, na.rm=T),
ymax=upr*sd(kos$end_rel, na.rm=T) + mean(kos$end_rel, na.rm=T)), alpha=.3) +
labs(x="Light pollution", y=ylab) +
theme_bw()
nd <- expand.grid(alan = seq(min(kos_sc$alan), max(kos_sc$alan), l=100),
day = median(kos_sc$day),
press_sunset = 0,
wind_sunset = 0,
cloud = c("No clouds", "Partly cloudy", "Cloudy"))
bb <- bootMer(mod2, FUN=function(x) predict(x, nd, re.form=NA), nsim = R)
nd$y <- bb$t0
nd$lwr <- apply(bb$t, 2, quantile, 0.025)
nd$upr <- apply(bb$t, 2, quantile, 0.9757)
p1 <- ggplot(nd %>% filter(cloud=="No clouds"),
aes(x=alan*sd(kos$alan)+mean(kos$alan), y=y*sd(kos$end_rel, na.rm=T) + mean(kos$end_rel, na.rm=T))) +
geom_line() +
geom_point(data=kos_sc, aes(y=end_rel*sd(kos$end_rel, na.rm=T)+mean(kos$end_rel, na.rm=T)), alpha = .2) +
geom_ribbon(aes(ymin=lwr*sd(kos$end_rel, na.rm=T) + mean(kos$end_rel, na.rm=T),
ymax=upr*sd(kos$end_rel, na.rm=T) + mean(kos$end_rel, na.rm=T)), alpha=.3) +
labs(x="Light pollution", y=ylab) +
theme_bw()
nd <- expand.grid(wind_sunset = seq(min(kos_sc$wind_sunset), max(kos_sc$wind_sunset), l=100),
day = median(kos_sc$day),
press_sunset = 0,
alan = 0,
cloud = "No clouds")
bb <- bootMer(mod2, FUN=function(x) predict(x, nd, re.form=NA), nsim = R)
nd$y <- bb$t0
nd$lwr <- apply(bb$t, 2, quantile, 0.025)
nd$upr <- apply(bb$t, 2, quantile, 0.9757)
p2 <- ggplot(nd,
aes(x=wind_sunset*sd(kos$wind_sunset)+mean(kos$wind_sunset),
y=y*sd(kos$end_rel, na.rm=T) + mean(kos$end_rel, na.rm=T))) +
geom_line() +
geom_point(data=kos_sc, aes(y=end_rel*sd(kos$end_rel, na.rm=T)+mean(kos$end_rel, na.rm=T)), alpha = .2) +
geom_ribbon(aes(ymin=lwr*sd(kos$end_rel, na.rm=T) + mean(kos$end_rel, na.rm=T),
ymax=upr*sd(kos$end_rel, na.rm=T) + mean(kos$end_rel, na.rm=T)), alpha=.3) +
labs(x="Wind speed (km/h)", y=ylab) +
theme_bw()
p1
p2
nd <- expand.grid(day = seq(min(kos_sc$day), max(kos_sc$day), l=100),
wind_sunset = 0,
press_sunset = 0,
alan = 0,
cloud = "No clouds")
bb <- bootMer(mod2, FUN=function(x) predict(x, nd, re.form=NA), nsim = R)
nd$y <- bb$t0
nd$lwr <- apply(bb$t, 2, quantile, 0.025)
nd$upr <- apply(bb$t, 2, quantile, 0.9757)
p3 <- ggplot(nd,
aes(x=day*sd(kos$day)+mean(kos$day),
y=y*sd(kos$end_rel, na.rm=T) + mean(kos$end_rel, na.rm=T))) +
geom_line() +
geom_point(data=kos_sc, aes(y=end_rel*sd(kos$end_rel, na.rm=T)+mean(kos$end_rel, na.rm=T)), alpha = .2) +
geom_ribbon(aes(ymin=lwr*sd(kos$end_rel, na.rm=T) + mean(kos$end_rel, na.rm=T),
ymax=upr*sd(kos$end_rel, na.rm=T) + mean(kos$end_rel, na.rm=T)), alpha=.3) +
labs(x="Day", y=ylab) +
theme_bw()
p3
cowplot::plot_grid(p1,p2,p3)
ylab="Onset of dawn singing (min. relative to sunrise)"
nd <- expand.grid(alan = 0,
mtemp = 0,
day = median(kos_sc$day),
noise_db = (60-mean(kos$noise_db))/sd(kos$noise_db),
wind_sunrise = seq(min(kos_sc$wind_sunrise), max(kos_sc$wind_sunrise), l=100))
bb <- bootMer(mod1, FUN=function(x) predict(x, nd, re.form=NA), nsim = R)
nd$y <- bb$t0
nd$lwr <- apply(bb$t, 2, quantile, 0.025)
nd$upr <- apply(bb$t, 2, quantile, 0.9757)
ggplot(nd, aes(x=wind_sunrise*sd(kos$wind_sunrise)+mean(kos$wind_sunrise), y=y*sd(kos$start_rel) + mean(kos$start_rel))) +
geom_line() +
geom_point(data=kos_sc, aes(y=start_rel*sd(kos$start_rel)+mean(kos$start_rel)), alpha = .2) +
geom_ribbon(aes(ymin=lwr*sd(kos$start_rel) + mean(kos$start_rel), ymax=upr*sd(kos$start_rel) + mean(kos$start_rel)), alpha=.3) +
labs(x="Wind speed (km/h)", y=ylab) +
theme_bw()
ggsave("start_2.png", height = 12, width = 12, units = "cm", dpi=300)
cowplot::plot_grid(p1,p2,p3)
ggsave("end.png", height = 18, width = 18, units = "cm", dpi=300)
ggsave("end.png", height = 21, width = 21, units = "cm", dpi=300)
summary(mod2)
summary(mod2)$coef["cloudPartly cloudy",1]
summary(mod2)$coef["cloudPartly cloudy",1]*sd(kos$end_rel, na.rm=T)
summary(mod2)$coef["cloudPartly cloudy",2]*sd(kos$end_rel, na.rm=T)
?relevel
summary(update(mod2, data=kos_sc %>% mutate(cloud=relevel(cloud. ref="Cloudy"))))$coef["cloudPartly cloudy",1]*sd(kos$end_rel, na.rm=T)
summary(update(mod2, data=kos_sc %>% mutate(cloud=relevel(cloud, ref="Cloudy"))))
summary(update(mod2, data=kos_sc %>% mutate(cloud=relevel(cloud, ref="Cloudy"))))$coef["cloudPartly cloudy",1]*sd(kos$end_rel, na.rm=T)
summary(update(mod2, data=kos_sc %>% mutate(cloud=relevel(cloud, ref="Cloudy"))))$coef["cloudPartly cloudy",2]*sd(kos$end_rel, na.rm=T)
summary(mod2)
summary(mod2)$coef
summary(mod2)$coef["day",1]*sd(kos$end_rel, na.rm=T)
summary(mod2)$coef["day",1]*sd(kos$end_rel, na.rm=T)/sd(kos$day)
(max(kos_sc$day) - min(kos_sc$day))*summary(mod2)$coef["day",1]*sd(kos$end_rel, na.rm=T)
(max(kos_sc$day) - min(kos_sc$day))*summary(mod2)$coef["day",2]*sd(kos$end_rel, na.rm=T)
# Morning intensity -------------------------
Anova(mod3)
ylab="Dawn chorus duration (minutes)"
nd <- cbind(
expand.grid(alan = seq(min(kos_sc$alan), max(kos_sc$alan), l=100),
noise_db = (c(50,60,70)-mean(kos$noise_db))/sd(kos$noise_db)),
humid_sunrise = 0,
press_sunrise = 0,
day = 0)
bb <- bootMer(mod3, FUN=function(x) predict(x, nd, re.form=NA), nsim = 999)
nd$y <- bb$t0
nd$lwr <- apply(bb$t, 2, quantile, 0.025)
nd$upr <- apply(bb$t, 2, quantile, 0.9757)
summary(mod3)$coef
nd$y[nd$noise_db == max(nd$noise_db) & nd$alan == max(nd$alan)]
nd$y[nd$noise_db == max(nd$noise_db) & nd$alan == max(nd$alan)] -
nd$y[nd$noise_db == max(nd$noise_db) & nd$alan == min(nd$alan)]
(nd$y[nd$noise_db == max(nd$noise_db) & nd$alan == max(nd$alan)] -
nd$y[nd$noise_db == max(nd$noise_db) & nd$alan == min(nd$alan)])*sd(kos$l_morning)
diffs <- bootMer(mod3, function(x) predict(mod3, data.frame(
alan = c(min(kos_sc$alan), max(kos_sc$alan)),
noise_db = (50-mean(kos$noise_db))/sd(kos$noise_db),
humid_sunrise=0, press_sunrise=0, day=0
), re.form = NA) %>% diff, nsim = R)
diffs$t0
diffs$t0*sd(kos$l_morning)
diffs70 <- bootMer(mod3, function(x) predict(mod3, data.frame(
alan = c(min(kos_sc$alan), max(kos_sc$alan)),
noise_db = (70-mean(kos$noise_db))/sd(kos$noise_db),
humid_sunrise=0, press_sunrise=0, day=0
), re.form = NA) %>% diff, nsim = R)
diffs70$t0*sd(kos$l_morning)
sd(diffs70$t)*sd(kos$l_morning)
diffs70$t
diffs70 <- bootMer(mod3, function(x) predict(x, data.frame(
alan = c(min(kos_sc$alan), max(kos_sc$alan)),
noise_db = (70-mean(kos$noise_db))/sd(kos$noise_db),
humid_sunrise=0, press_sunrise=0, day=0
), re.form = NA) %>% diff, nsim = R)
diffs70$t0*sd(kos$l_morning)
sd(diffs70$t)*sd(kos$l_morning)
diffs50 <- bootMer(mod3, function(x) predict(x, data.frame(
alan = c(min(kos_sc$alan), max(kos_sc$alan)),
noise_db = (50-mean(kos$noise_db))/sd(kos$noise_db),
humid_sunrise=0, press_sunrise=0, day=0
), re.form = NA) %>% diff, nsim = R)
diffs50$t0*sd(kos$l_morning)
sd(diffs50$t)*sd(kos$l_morning)
nd <- expand.grid(day = seq(min(kos_sc$day), max(kos_sc$day), l=100),
noise_db = 0,
humid_sunrise = 0,
press_sunrise = 0,
alan=0)
bb <- bootMer(mod3, FUN=function(x) predict(x, nd, re.form=NA), nsim = 999)
nd$y <- bb$t0
nd$lwr <- apply(bb$t, 2, quantile, 0.025)
nd$upr <- apply(bb$t, 2, quantile, 0.9757)
ggplot(nd, aes(x=day*sd(kos$day) + mean(kos$day), y=y*sd(kos$l_morning) + mean(kos$l_morning))) +
geom_line() +
geom_ribbon(aes(ymin=lwr*sd(kos$l_morning) + mean(kos$l_morning), ymax=upr*sd(kos$l_morning) + mean(kos$l_morning)), alpha=.3) +
# geom_point(data=kos_sc, aes(y=l_morning, color=as.factor(noise_db)), alpha=.3) +
labs(x="Day", y=ylab) +
theme_bw()
ggplot(nd, aes(x=day*sd(kos$day) + mean(kos$day), y=y*sd(kos$l_morning) + mean(kos$l_morning))) +
geom_line() +
geom_ribbon(aes(ymin=lwr*sd(kos$l_morning) + mean(kos$l_morning), ymax=upr*sd(kos$l_morning) + mean(kos$l_morning)), alpha=.3) +
geom_point(data=kos_sc, aes(y=l_morning), alpha=.3) +
labs(x="Day", y=ylab) +
theme_bw()
ggplot(nd, aes(x=day*sd(kos$day) + mean(kos$day), y=y*sd(kos$l_morning) + mean(kos$l_morning))) +
geom_line() +
geom_ribbon(aes(ymin=lwr*sd(kos$l_morning) + mean(kos$l_morning), ymax=upr*sd(kos$l_morning) + mean(kos$l_morning)), alpha=.3) +
geom_point(data=kos_sc, aes(y=l_morning)*sd(kos$l_morning) + mean(kos$l_morning), alpha=.3) +
labs(x="Day", y=ylab) +
theme_bw()
ggplot(nd, aes(x=day*sd(kos$day) + mean(kos$day), y=y*sd(kos$l_morning) + mean(kos$l_morning))) +
geom_line() +
geom_ribbon(aes(ymin=lwr*sd(kos$l_morning) + mean(kos$l_morning), ymax=upr*sd(kos$l_morning) + mean(kos$l_morning)), alpha=.3) +
geom_point(data=kos_sc, aes(y=l_morning*sd(kos$l_morning) + mean(kos$l_morning)), alpha=.3) +
labs(x="Day", y=ylab) +
theme_bw()
ggsave("l_morning_2.png", height = 10, width = 14, units = "cm", dpi=300)
ggsave("l_morning_2.png", height = 12, width = 12, units = "cm", dpi=300)
summary(mod3)$coef
summary(mod3)$coef["day",]
summary(mod3)$coef["day",1]**sd(kos$l_morning)
summary(mod3)$coef["day",1]*sd(kos$l_morning)
summary(mod3)$coef["day",1]*sd(kos$l_morning)/sd(kos$day)
(max(kos_sc$day)-min(kos_sc$day))*summary(mod3)$coef["day",1]*sd(kos$l_morning)
(max(kos_sc$day)-min(kos_sc$day))*summary(mod3)$coef["day",2]*sd(kos$l_morning)
# Evening intensity -------------------------
Anova(mod4)
ylab="Dusk chorus duration (minutes)"
summary(mod4)$coef
diffs_start <- bootMer(mod4, function(x) predict(x, data.frame(
alan = c(min(kos_sc$alan), max(kos_sc$alan)),
noise_db = 0,
day = min(kos_sc$day),
press_sunset = 0, humid_sunset=0, cloud="No clouds"
), re.form = NA) %>% diff, nsim = R)
diffs_start$t0*sd(kos$l_morning)
sd(diffs_start50$t)*sd(kos$l_morning)
sd(diffs_start$t)*sd(kos$l_morning)
diffs_start$t0*sd(kos$l_evening)
sd(diffs_start$t)*sd(kos$l_evening)
diffs_end <- bootMer(mod4, function(x) predict(x, data.frame(
alan = c(min(kos_sc$alan), max(kos_sc$alan)),
noise_db = 0,
day = min(kos_sc$day),
press_sunset = 0, humid_sunset=0, cloud="No clouds"
), re.form = NA) %>% diff, nsim = R)
diffs_end$t0*sd(kos$l_evening)
sd(diffs_end$t)*sd(kos$l_evening)
diffs_end <- bootMer(mod4, function(x) predict(x, data.frame(
alan = c(min(kos_sc$alan), max(kos_sc$alan)),
noise_db = 0,
day = max(kos_sc$day),
press_sunset = 0, humid_sunset=0, cloud="No clouds"
), re.form = NA) %>% diff, nsim = R)
diffs_end$t0*sd(kos$l_evening)
sd(diffs_end$t)*sd(kos$l_evening)
summary(mod4)$coefs
summary(mod4)$coef
summary(mod4)$coef["noise_db",1]
(max(kos_sc$noise_db) - min(kos_sc$noise_db))*summary(mod4)$coef["noise_db",1]
(max(kos_sc$noise_db) - min(kos_sc$noise_db))*summary(mod4)$coef["noise_db",1]*sd(kos$l_evening)
(max(kos_sc$noise_db) - min(kos_sc$noise_db))*summary(mod4)$coef["noise_db",2]*sd(kos$l_evening)
table(kos$noise_db)
# Evening intensity -------------------------
Anova(mod4)
nd <- data.frame(
noise_db = 0,
alan=0,
day=0,
press_sunset = 0,
humid_sunset = seq(min(kos_sc$humid_sunset), max(kos_sc$humid_sunset), l=100),
cloud = "No clouds")
bb <- bootMer(mod4, FUN=function(x) predict(x, nd, re.form=NA), nsim = 999)
nd$y <- bb$t0
nd$lwr <- apply(bb$t, 2, quantile, 0.025)
nd$upr <- apply(bb$t, 2, quantile, 0.9757)
ggplot(nd, aes(x=humid_sunset*sd(kos$humid_sunset) + mean(kos$humid_sunset), y=y*sd(kos$l_evening) + mean(kos$l_evening))) +
geom_line() +
geom_ribbon(aes(ymin=lwr*sd(kos$l_evening) + mean(kos$l_evening), ymax=upr*sd(kos$l_evening) + mean(kos$l_evening)), alpha=.3) +
geom_point(data=kos_sc, aes(y=l_evening*sd(kos$l_evening) + mean(kos$l_evening)), alpha=.3) +
labs(x="Air humidity (%)", y=ylab) +
theme_bw()
ggsave("l_evening_3.png", height = 12, width = 12, units = "cm", dpi=300)
summary(mod4)$coef["humid_sunset",1]
summary(mod4)$coef["humid_sunset",1]*sd(kos$l_evening)/sd(kos$humid_sunset)
summary(mod4)$coef["humid_sunset",1]*sd(kos$l_evening)/sd(kos$humid_sunset)
10*summary(mod4)$coef["humid_sunset",1]*sd(kos$l_evening)/sd(kos$humid_sunset)
10*summary(mod4)$coef["humid_sunset",2]*sd(kos$l_evening)/sd(kos$humid_sunset)
r2_nakagawa()
?r2_nakagawa
citation("lme4")
citation("dplyr")
